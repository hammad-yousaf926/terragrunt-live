# 

name: Terragrunt CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.filter.outputs.dirs }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch Full History
        run: |
          if [ -f .git/shallow ]; then
            git fetch --prune --unshallow --tags
          else
            git fetch --prune --tags
          fi

      - name: Detect Changed Directories
        id: filter
        run: |
          # Detect all tracked terragrunt.hcl files under accounts directory
          CHANGED_FILES=$(git diff --name-only origin/main | grep 'accounts/.*terragrunt.hcl' || echo "")
          if [[ -z "$CHANGED_FILES" ]]; then
            echo "[]" > changed-dirs.json
            exit 0
          fi

          # Extract unique directories containing terragrunt.hcl files
          UNIQUE_DIRS=$(echo "$CHANGED_FILES" | xargs -n1 dirname | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "$UNIQUE_DIRS" > changed-dirs.json
          echo "Detected directories: $UNIQUE_DIRS"

      - name: Upload Changed Directories
        uses: actions/upload-artifact@v3
        with:
          name: changed-dirs
          path: changed-dirs.json


  validate-plan:
    runs-on: ubuntu-latest
    needs: detect-changes
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Changed Directories
        uses: actions/download-artifact@v3
        with:
          name: changed-dirs

      - name: Read Changed Directories
        id: read-dirs
        run: |
          DIRS=$(cat changed-dirs.json)
          echo "DIRS=$DIRS" >> $GITHUB_ENV

      - name: Process Each Directory
        run: |
          for DIR in $(echo $DIRS | jq -r '.[]'); do
            echo "Processing directory: $DIR"

            # Extract account name dynamically
            ACCOUNT=$(echo $DIR | cut -d'/' -f2 | tr '[:lower:]' '[:upper:]' | tr '-' '_')
            echo "Using account: $ACCOUNT"

            # Configure AWS credentials dynamically
            aws configure set aws_access_key_id ${{ secrets[format('AWS_ACCESS_KEY_{0}', ACCOUNT)] }}
            aws configure set aws_secret_access_key ${{ secrets[format('AWS_SECRET_KEY_{0}', ACCOUNT)] }}

            # Run terragrunt plan
            terragrunt run-all plan --terragrunt-working-dir=$DIR --terragrunt-non-interactive
          done


  apply:
    runs-on: ubuntu-latest
    needs: validate-plan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Changed Directories
        uses: actions/download-artifact@v3
        with:
          name: changed-dirs

      - name: Read Changed Directories
        id: read-dirs
        run: |
          DIRS=$(cat changed-dirs.json)
          echo "DIRS=$DIRS" >> $GITHUB_ENV

      - name: Process Each Directory
        run: |
          for DIR in $(echo $DIRS | jq -r '.[]'); do
            echo "Processing directory: $DIR"

            # Extract account name dynamically
            ACCOUNT=$(echo $DIR | cut -d'/' -f2 | tr '[:lower:]' '[:upper:]' | tr '-' '_')
            echo "Using account: $ACCOUNT"

            # Configure AWS credentials dynamically
            aws configure set aws_access_key_id ${{ secrets[format('AWS_ACCESS_KEY_{0}', ACCOUNT)] }}
            aws configure set aws_secret_access_key ${{ secrets[format('AWS_SECRET_KEY_{0}', ACCOUNT)] }}

            # Run terragrunt apply
            terragrunt apply --terragrunt-working-dir=$DIR --terragrunt-non-interactive -auto-approve
          done
