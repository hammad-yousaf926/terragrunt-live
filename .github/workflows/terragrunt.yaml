# name: Terragrunt CI/CD Pipeline

# on:
#   pull_request:
#     branches:
#       - main
#   push:
#     branches:
#       - main

# jobs:
#   detect-changes:
#     runs-on: ubuntu-latest
#     outputs:
#       dirs: ${{ steps.filter.outputs.dirs }}
#       accounts: ${{ steps.filter.outputs.accounts }}

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Fetch Full History
#         run: |
#           if [ -f .git/shallow ]; then
#             git fetch --prune --unshallow --tags
#           else
#             git fetch --prune --tags
#           fi

#       - name: Detect Changed Directories
#         id: filter
#         run: |
#           # Detect all tracked terragrunt.hcl files under accounts directory
#           CHANGED_FILES=$(git diff --name-only origin/main | grep 'accounts/.*terragrunt.hcl' || echo "")
#           if [[ -z "$CHANGED_FILES" ]]; then
#             echo "No changes detected."
#             echo "dirs=[]" >> $GITHUB_ENV
#             echo "dirs=[]" >> $GITHUB_OUTPUT
#             echo "accounts=[]" >> $GITHUB_ENV
#             echo "accounts=[]" >> $GITHUB_OUTPUT
#             exit 0
#           fi

#           # Extract unique directories containing terragrunt.hcl files
#           UNIQUE_DIRS=$(echo "$CHANGED_FILES" | xargs -n1 dirname | sort -u | jq -R -s -c 'split("\n")[:-1]')
#           echo "Detected directories: $UNIQUE_DIRS"
#           echo "dirs=$UNIQUE_DIRS" >> $GITHUB_ENV
#           echo "dirs=$UNIQUE_DIRS" >> $GITHUB_OUTPUT

#           # Extract unique accounts
#           ACCOUNTS=$(echo "$CHANGED_FILES" | cut -d'/' -f2 | sort -u | jq -R -s -c 'split("\n")[:-1]')
#           echo "Detected accounts: $ACCOUNTS"
#           echo "accounts=$ACCOUNTS" >> $GITHUB_ENV
#           echo "accounts=$ACCOUNTS" >> $GITHUB_OUTPUT


#   validate-plan:
#     runs-on: ubuntu-latest
#     needs: detect-changes
#     if: ${{ needs.detect-changes.outputs.dirs != '[]' }}
#     strategy:
#       matrix:
#         dir: ${{ fromJson(needs.detect-changes.outputs.dirs || '[]') }}

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Extract Account Name
#         id: extract-account
#         run: |
#           ACCOUNT=$(echo ${{ matrix.dir }} | cut -d'/' -f2 | tr '[:lower:]' '[:upper:]' | tr '-' '_')
#           echo "ACCOUNT_NAME=$ACCOUNT" >> $GITHUB_ENV
#           echo "Account Name: $ACCOUNT"

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v3
#         with:
#           aws-access-key-id: ${{ secrets[format('AWS_ACCESS_KEY_{0}', env.ACCOUNT_NAME)] }}
#           aws-secret-access-key: ${{ secrets[format('AWS_SECRET_KEY_{0}', env.ACCOUNT_NAME)] }}
#           aws-region: us-east-1

#       - name: Set up Terraform CLI
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.9.8

#       - name: Install Terragrunt
#         run: |
#           sudo curl -L -o /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.45.0/terragrunt_linux_amd64
#           sudo chmod +x /usr/local/bin/terragrunt

#       - name: Terragrunt Plan
#         run: |
#           terragrunt run-all plan --terragrunt-working-dir=${{ matrix.dir }} --terragrunt-non-interactive


#   apply:
#     runs-on: ubuntu-latest
#     needs: validate-plan
#     if: ${{ needs.detect-changes.outputs.dirs != '[]' }}
#     strategy:
#       matrix:
#         dir: ${{ fromJson(needs.detect-changes.outputs.dirs || '[]') }}

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Extract Account Name
#         id: extract-account
#         run: |
#           ACCOUNT=$(echo ${{ matrix.dir }} | cut -d'/' -f2 | tr '[:lower:]' '[:upper:]' | tr '-' '_')
#           echo "ACCOUNT_NAME=$ACCOUNT" >> $GITHUB_ENV
#           echo "Account Name: $ACCOUNT"

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v3
#         with:
#           aws-access-key-id: ${{ secrets[format('AWS_ACCESS_KEY_{0}', env.ACCOUNT_NAME)] }}
#           aws-secret-access-key: ${{ secrets[format('AWS_SECRET_KEY_{0}', env.ACCOUNT_NAME)] }}
#           aws-region: us-east-1

#       - name: Debug Working Directory
#         run: |
#           echo "Matrix Dir: ${{ matrix.dir }}"
#           ls -l ${{ matrix.dir }} || echo "Directory does not exist!"

#       - name: Verify Directory Exists
#         run: |
#           if [ ! -d "${{ matrix.dir }}" ]; then
#             echo "Directory does not exist: ${{ matrix.dir }}"
#             exit 1
#           fi

#       - name: Set up Terraform CLI
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.9.8

#       - name: Install Terragrunt
#         run: |
#           sudo curl -L -o /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.45.0/terragrunt_linux_amd64
#           sudo chmod +x /usr/local/bin/terragrunt

#       - name: Terragrunt Apply
#         run: |
#           terragrunt apply --terragrunt-working-dir=${{ matrix.dir }} --terragrunt-non-interactive -auto-approve


name: Terragrunt CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.filter.outputs.dirs }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch Full History
        run: |
          if [ -f .git/shallow ]; then
            git fetch --prune --unshallow --tags
          else
            git fetch --prune --tags
          fi

      - name: Detect Changed Directories
        id: filter
        run: |
          # Detect all tracked terragrunt.hcl files under accounts directory
          CHANGED_FILES=$(git diff --name-only origin/main | grep 'accounts/.*terragrunt.hcl' || echo "")
          if [[ -z "$CHANGED_FILES" ]]; then
            echo "[]" > changed-dirs.json
            exit 0
          fi

          # Extract unique directories containing terragrunt.hcl files
          UNIQUE_DIRS=$(echo "$CHANGED_FILES" | xargs -n1 dirname | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "$UNIQUE_DIRS" > changed-dirs.json
          echo "Detected directories: $UNIQUE_DIRS"

      - name: Upload Changed Directories
        uses: actions/upload-artifact@v3
        with:
          name: changed-dirs
          path: changed-dirs.json


  validate-plan:
    runs-on: ubuntu-latest
    needs: detect-changes
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Changed Directories
        uses: actions/download-artifact@v3
        with:
          name: changed-dirs

      - name: Read Changed Directories
        id: read-dirs
        run: |
          DIRS=$(cat changed-dirs.json)
          echo "DIRS=$DIRS" >> $GITHUB_ENV

      - name: Set up Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Install Terragrunt
        run: |
          sudo curl -L -o /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.45.0/terragrunt_linux_amd64
          sudo chmod +x /usr/local/bin/terragrunt

      - name: Process Each Directory
        run: |
          for DIR in $(echo $DIRS | jq -r '.[]'); do
            echo "Processing directory: $DIR"

            # Extract account name dynamically
            ACCOUNT=$(echo $DIR | cut -d'/' -f2 | tr '[:lower:]' '[:upper:]' | tr '-' '_')
            echo "Using account: $ACCOUNT"

            # Configure AWS credentials dynamically using aws-actions
            aws-actions/configure-aws-credentials@v3:
              with:
                aws-access-key-id: ${{ secrets[format('AWS_ACCESS_KEY_{0}', ACCOUNT)] }}
                aws-secret-access-key: ${{ secrets[format('AWS_SECRET_KEY_{0}', ACCOUNT)] }}
                aws-region: us-east-1

            # Run terragrunt plan
            terragrunt run-all plan --terragrunt-working-dir=$DIR --terragrunt-non-interactive
          done


  apply:
    runs-on: ubuntu-latest
    needs: validate-plan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Changed Directories
        uses: actions/download-artifact@v3
        with:
          name: changed-dirs

      - name: Read Changed Directories
        id: read-dirs
        run: |
          DIRS=$(cat changed-dirs.json)
          echo "DIRS=$DIRS" >> $GITHUB_ENV

      - name: Set up Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Install Terragrunt
        run: |
          sudo curl -L -o /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.45.0/terragrunt_linux_amd64
          sudo chmod +x /usr/local/bin/terragrunt

      - name: Process Each Directory
        run: |
          for DIR in $(echo $DIRS | jq -r '.[]'); do
            echo "Processing directory: $DIR"

            # Extract account name dynamically
            ACCOUNT=$(echo $DIR | cut -d'/' -f2 | tr '[:lower:]' '[:upper:]' | tr '-' '_')
            echo "Using account: $ACCOUNT"

            # Configure AWS credentials dynamically using aws-actions
            aws-actions/configure-aws-credentials@v3:
              with:
                aws-access-key-id: ${{ secrets[format('AWS_ACCESS_KEY_{0}', ACCOUNT)] }}
                aws-secret-access-key: ${{ secrets[format('AWS_SECRET_KEY_{0}', ACCOUNT)] }}
                aws-region: us-east-1

            # Run terragrunt apply
            terragrunt apply --terragrunt-working-dir=$DIR --terragrunt-non-interactive -auto-approve
          done



